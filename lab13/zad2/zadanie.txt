
Krejzolskie podwórko

Koñ Rafa³ hasa³ wesó³ po podwórzu. Hasa³, hasa³ i tak siê zapomnia³ w tym hasaniu, ¿e nawet nie zauwa¿y³,
¿e przeskoczy³ przez ogrodzenie. Kilkukrotnie.

"O cholera", pomyœla³ koñ Rafa³;
"teraz nawet nie wiem, czy jestem w œrodku, czy na zewn¹trz ogrodzenia", pomyœla³ koñ Rafa³.

Na szczêœcie, koñ Rafa³ mia³ przy sobie GPS (a wiêc potafi³ okreœliæ swoje wspó³rzêdne) oraz magiczn¹ czarn¹ skrzynkê,
która zna³a plan podwórza i potrafi³a *bardzo szybko* okreœliæ, czy dany punkt znajduje siê wewn¹trz ogrodzenia.

Te¿ chcemy mieæ tak¹ skrzynkê!

Uzupe³nij metody klasy Polygon:
 - Klasa w konstruktorze przyjmuje listê n wierzcho³ków pewnego wielok¹ta *bez samoprzeciêæ* i mo¿e wykonaæ wstêpne
   obliczenia, zajmuj¹ce nie wiêcej ni¿ O(n*n*log(n)) czasu i pamiêci.

 - Metoda ContainsPoint sprawdza, czy podany punkt nale¿y do wielok¹ta, w czasie O(log n).
   (Oczywiœcie punkty znajduj¹ce siê na bokach wielok¹ta równie¿ do niego nale¿¹).

Punktacja:
1p jakiekolwiek rozwi¹zanie przechodz¹ce podstawowe testy
2p jw + testy wydajnoœci licz¹ siê szybko
3p jw + rozwi¹zanie przechodzi równie¿ zaawansowane testy
4p jw + wszystkie testy przechodz¹

Wskazówka:
Wykorzystaj metodê zamiatania.

Je¿eli w konstruktorze przeprowadzisz ca³e zamiatanie i zapiszesz sobie jakoœ wszystkie napotkane "stany" prostej
zamiataj¹cej (tzn. odcinki - boki wielok¹ta - przecinaj¹ce tê prost¹, uporz¹dkowane od najni¿szego do najwy¿szego),
póŸniej bêdziesz w stanie znaleŸæ stosowny stan prostej zamiataj¹cej w czasie O(log n), potem znaleŸæ,
miêdzy którymi dwoma odcinkami znajduje siê poszukiwany punkt (równie¿ w czasie O(log n)) i podaæ odpowiedŸ.

